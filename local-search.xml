<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>linux命令</title>
    <link href="/2024/12/26/linux%E5%91%BD%E4%BB%A4/"/>
    <url>/2024/12/26/linux%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="linux命令"><a href="#linux命令" class="headerlink" title="linux命令"></a>linux命令</h1><ol><li><p>pwd：显示当前完整路径。</p></li><li><p>cd：更改当前工作目录。 ..返回上一级。 ~表示home目录</p></li><li><p>ls：显示当前路径下所有目录和文件。<br>“-l”：列出文件详细信息。<br>“-a”：显示所有文件(包括隐藏文件)</p></li><li><p>clear：清屏</p></li><li><p>rm：删除文件。“-r”：删除目录，“-rf”：强制删除文件和目录</p></li><li><p>touch：创建文件</p></li><li><p>mkdir：创建目录。“-p”：可以一次创建多级目录。</p></li><li><p>df：查看磁盘当前可用空间(查看当前光盘挂载情况)。</p></li><li><p>free：查看当前可用内存容量。</p></li><li><p>file：输出文件内容的简要描述。</p></li><li><p>cp：复制文件或目录。</p></li><li><p>mv：移动或重命名文件或目录。</p></li><li><p>输出重定向：&gt;：覆盖输出，&gt;&gt;：追加输出。语法：指令&gt;文件路径</p></li><li><p>cat：直接打开文件，查看文件内容。</p></li><li><p>head：查看文件前n行。<br>语法：head -n 文件路径(n为行数，默认为前十行)</p></li><li><p>tail：查看文件后n行。<br>语法：tail -n 文件路径（n为行数，默认后十行）<br>tail -f 文件：查看文件的动态变化内容（不能是用户手动增加的）</p></li><li><p>less：查看文件内容以较少内容输出(可以翻页)，more类似(可以自动退出)</p></li><li><p>wc：统计文件内容信息。</p><table><thead><tr><th align="center">参数</th><th>说明</th></tr></thead><tbody><tr><td align="center">-l</td><td>表示lines行数</td></tr><tr><td align="center">-w</td><td>表示words单词数</td></tr><tr><td align="center">-c</td><td>表示bytes字节数</td></tr></tbody></table></li><li><p>grep：查找指定内容</p></li><li><p>|：管道符<br>语法：命令1 | 命令2 (命令1的结果作为命令2的输入)。<br>案例：ls &#x2F; |grep y (查询根目录下包含y字母的文档名称)</p></li><li><p>ln：创建链接(快捷方式)<br>语法：ln 参数 源文件 新文件<br>参数：-s：软连接(不加为硬链接)</p></li><li><p>alias：别名<br>语法：alias 别名&#x3D;“可执行的命令”</p></li><li><p>su：切换用户</p></li><li><p>useradd：创建用户(在root下)<br>语法：useradd 参数 用户名</p><table><thead><tr><th>参数</th><th>说明</th><th>语法</th></tr></thead><tbody><tr><td>-u</td><td>指定用户UID</td><td>useradd  -u  用户UID  用户名</td></tr><tr><td>-g</td><td>指定用户基本组</td><td>useradd  -g  组名  用户名</td></tr><tr><td>-G</td><td>指定用户附加组</td><td>useradd  -G  组名  用户名</td></tr><tr><td>-e</td><td>指定用户失效时间</td><td>useradd  -e  yyyy-mm-dd(失效时间)  用户名</td></tr><tr><td>-d</td><td>指定用户家目录</td><td>useradd  -d  家目录  用户名</td></tr></tbody></table></li><li><p>groupadd：创建组<br>语法：groupadd  组名</p></li><li><p>userdel：删除用户<br>语法：userdel  参数  用户名(参数：-r：删除用户及家目录)</p></li><li><p>groupdel：删除组。</p></li><li><p>usermod：修改用户信息<br>语法：usermod  参数  用户名</p><table><thead><tr><th>参数</th><th>说明</th><th>语法</th></tr></thead><tbody><tr><td>-l</td><td>更改用户名</td><td>usermod  -l  新用户名  旧用户名</td></tr><tr><td>-u</td><td>更改用户UID</td><td>usermod  -u  新UID  用户名</td></tr><tr><td>-g</td><td>更改用户基本组</td><td>usermod  -g  组名  用户名</td></tr><tr><td>-G</td><td>更改用户附加组</td><td>usermod  -G  组名  用户名</td></tr><tr><td>-a</td><td>追加用户附加组</td><td>usermod  -a  -G  新附加组  用户名</td></tr></tbody></table></li><li><p>passwd：修改密码</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-l</td><td>锁定用户</td></tr><tr><td>-u</td><td>解锁用户</td></tr></tbody></table></li><li><p>gpasswd：移除组内用户<br>语法：gpasswd  参数  用户名</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-d</td><td>删除</td></tr><tr><td>-a</td><td>添加（为附加组）</td></tr></tbody></table></li><li><p>chmod：修改权限<br>语法：chmod  参数  权限模式  文件（目录）</p><table><thead><tr><th>权限模式字母形式</th><th></th><th></th><th>数字形式</th></tr></thead><tbody><tr><td>u：用户</td><td>+：增加权限</td><td>r：可读</td><td>4：读</td></tr><tr><td>g：所属组</td><td>-：减少权限</td><td>w：可写</td><td>2：写</td></tr><tr><td>o：其他人</td><td>&#x3D;：确定权限</td><td>x：可执行</td><td>1：执行</td></tr><tr><td>a：全部</td><td></td><td></td><td>0：无权限</td></tr></tbody></table></li><li><p>chown：更改文档所属用户。<br>语法：chown  参数  新用户:组名  对象（不修改可以不填）<br>参数：-R：递归(目录及目录下所有文件)</p></li><li><p>setfacl：给予指定用户某个对象特殊权限。<br>语法：setfacl  参数  设定值  对象</p><table><thead><tr><th>参数</th><th>说明</th><th>语法</th></tr></thead><tbody><tr><td>-m</td><td>设定规则</td><td>setfacl  -m  身份:用户:权限  对象（身份：用户：u，组：g）</td></tr><tr><td>-x</td><td>取消特殊权限</td><td>setfacl  -x  身份:用户  对象</td></tr><tr><td>-b</td><td>取消所有特殊权限</td><td>setfacl  -b  对象</td></tr></tbody></table></li><li><p>sudo：让管理员实现定义某些命令谁可以执行。<br>先用管理员root输入visudo进入配置文件写上<br></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">用户名    <span class="hljs-keyword">ALL</span>=(<span class="hljs-keyword">ALL</span>)    给该用户具体权限的完整路径<br></code></pre></td></tr></table></figure></li><li><p>which：查看指定命令的完整路径。</p></li><li><p>ps：显示系统执行的进程。</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-a</td><td>显示当前终端所有进程信息</td></tr><tr><td>-u</td><td>以用户的格式显示进程信息</td></tr><tr><td>-x</td><td>显示后台进程进行的参数</td></tr></tbody></table></li><li><p>pstree：查看进程树。</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-p</td><td>显示进程的PID</td></tr><tr><td>-u</td><td>显示进程所属用户</td></tr></tbody></table></li><li><p>kill：终止进程。<br>语法：kill  参数  进程号(PID)<br>killall  进程名称</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-9</td><td>强制停止</td></tr><tr><td>-15</td><td>正常结束进程(并回收资源)</td></tr></tbody></table></li><li><p>find：查找文件或目录<br>语法：find  指定路径  参数(参数值)  (后续处理操作)</p><h5 id="1-简单查找：find-指定路径"><a href="#1-简单查找：find-指定路径" class="headerlink" title="1.简单查找：find  指定路径"></a>1.简单查找：find  指定路径</h5><h5 id="2-根据类型查找。语法：find-路径-type-参数"><a href="#2-根据类型查找。语法：find-路径-type-参数" class="headerlink" title="2.根据类型查找。语法：find  路径  -type  参数"></a>2.根据类型查找。<br>语法：find  路径  -type  参数</h5><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-type d</td><td>显示路径下所有目录</td></tr><tr><td>-type f</td><td>显示路径下所有文件</td></tr><tr><td>-type l</td><td>显示路径下所有链接文件</td></tr></tbody></table><h5 id="3-根据深度查找。语法：find-路径-参数"><a href="#3-根据深度查找。语法：find-路径-参数" class="headerlink" title="3.根据深度查找。语法：find  路径  参数"></a>3.根据深度查找。<br>语法：find  路径  参数</h5><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-maxdepth  n</td><td>最大查找深度</td></tr><tr><td>-mindepth  n</td><td>最小查找深度</td></tr><tr><td>-maxdepth  n1  -mindepth  n2</td><td>两个一起用</td></tr></tbody></table><h5 id="4-根据身份查找。"><a href="#4-根据身份查找。" class="headerlink" title="4.根据身份查找。"></a>4.根据身份查找。</h5><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-user  用户名(UID)</td><td>根据用户查找</td></tr><tr><td>-group  组名(GID)</td><td>根据组查找</td></tr><tr><td>-nouser</td><td>查找无主用户</td></tr></tbody></table><h5 id="5-根据文件名查找：-name-字段"><a href="#5-根据文件名查找：-name-字段" class="headerlink" title="5.根据文件名查找：-name 字段"></a>5.根据文件名查找：-name 字段</h5><h5 id="6-find的逻辑组合"><a href="#6-find的逻辑组合" class="headerlink" title="6.find的逻辑组合"></a>6.find的逻辑组合</h5><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-a</td><td>与逻辑</td></tr><tr><td>-o</td><td>或逻辑</td></tr><tr><td>-not或！</td><td>非逻辑</td></tr></tbody></table><h5 id="7-后续处理动作"><a href="#7-后续处理动作" class="headerlink" title="7.后续处理动作"></a>7.后续处理动作</h5><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-print</td><td>把命令输出到终端上</td></tr><tr><td>-ls</td><td>在指令最后面加上可以显示具体信息</td></tr><tr><td>-delete</td><td>把找到的东西删除</td></tr><tr><td>-ok</td><td>语法：-ok  可执行的命令  {find的命令找到后的结果}  ;</td></tr></tbody></table></li><li><p>gzip：对单一我呢见进行压缩(生成*.gz压缩文件)压缩后源文件不保留<br>语法：gzip  参数  被压缩文件</p><table><thead><tr><th>参数</th><th>说明</th><th>语法</th></tr></thead><tbody><tr><td>-d</td><td>解压缩(和gunzip命令一样)</td><td>gzip  -d  压缩文件.gzip</td></tr><tr><td>-c</td><td>对文件压缩并保留源文件，可以进行重命名</td><td>gzip  -c  被压缩文件 &gt; 压缩文件名.gz</td></tr><tr><td>-k</td><td>和-c用法一样(centos8支持)</td><td>gzip  -k  被压缩文件</td></tr><tr><td>-#</td><td>#为1-9数字，数字越大压缩比越大，默认为6</td><td></td></tr></tbody></table></li><li><p>zcat：在不解压缩文件的前提下查看文件内容(xzcat和bzcat)</p></li><li><p>bzip2：和gzip效果一样但后缀为.bz2</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-k</td><td>压缩后保留源文件(gzip没有)，其他参数和gzip一样。</td></tr></tbody></table></li><li><p>xz：和bzip2、gzip效果一样。后缀为.xz。解压缩命令为unxz</p></li><li><p>zip：压缩文件或目录(压缩后默认保留源文件)</p><ol><li><p>直接压缩文件<br>语法：zip  压缩文件名(*.zip)  被压缩文件<br>压缩后保留源文件，可修改文件名，可指定压缩到具体路径</p></li><li><p>解压缩文件<br>语法：unzip  *.zip</p><ol><li><p>注意是否会生成重名文件，根据实际情况，替换或重命名</p></li><li><p>参数：-d 指定到某路径 unzip *.zip -d 指定的路径</p></li><li><p>压缩目录：zip 参数 压缩目录名(*.zip) 被压缩目录<br>不加参数只对单一的目录本身压缩，目录下内容没有压缩<br>参数：-r  对目录及目录下内容整体压缩</p></li><li><p>解压缩目录：unzip  *.zip</p><ol><li><p>注意是否有重名目录</p></li><li><p>指定解压缩路径：unzip  *.zip  -d  指定路径</p></li><li><p>在指定路径的同时进行重命名：unzip  *.zip  -d  指定路径&#x2F;.zip</p></li><li><p>如果只想压缩目录下内容(不包含目录本身)，先进入目录，在目录下操作。</p></li></ol></li></ol></li></ol></li><li><p>rpm(目前只用查询软件安装版本)<br>语法：rpm  -q  具体命令</p></li><li><p>yum：包的管理</p><ol><li><p>找仓库路径，注意：要配置本地仓库的话，一定要挂载到一个目录下</p></li><li><p>网络仓库：</p><ol><li><p>阿里云仓库：<a href="https://mirrors.aliyun.com/">https://mirrors.aliyun.com/</a></p></li><li><p>华为云仓库：<a href="https://mirrors.huaweicloud.com/">https://mirrors.huaweicloud.com/</a></p></li><li><p>搜狐云仓库：<a href="https://mirrors.sohu.com/">https://mirrors.sohu.com</a></p></li><li><p>网易云仓库：<a href="https://mirrors.163.com/">https://mirrors.163.com</a></p></li><li><p>epel仓库的网络地址[<a href="https://mirrors.aliyun.com/epel7">https://mirrors.aliyun.com/epel7</a> x86 64&#x2F;](<a href="https://mirrors.aliyun.com/epel7">https://mirrors.aliyun.com/epel7</a> x86 64&#x2F;)</p></li><li><p>epel的安全密钥地址：<a href="https://mirrors.aliyun.com/epel/RPM-GPG-KEY-EPEL-7">https://mirrors.aliyun.com/epel/RPM-GPG-KEY-EPEL-7</a></p></li></ol></li><li><p>配置网络仓库文件<br>仓库文件名一定是*.repo<br>[epel]##仓库ID一定是连续的字符串<br>##仓库名<br>name&#x3D;epel<br>##网络yum仓库位置<br>baseurl&#x3D;<a href="https://mirrors.aliyun.com/epel/7/x86_64/">https://mirrors.aliyun.com/epel/7/x86_64/</a><br>##启用该yum源<br>enabled&#x3D;1<br>##安全密钥地址<br>gpgkey&#x3D;<a href="https://mirrors.aliyun.com/epel/RPM-GPG-KEY-EPEL-7">https://mirrors.aliyun.com/epel/RPM-GPG-KEY-EPEL-7</a><br>##进行安全密钥检查<br>gpgcheck&#x3D;1</p></li><li><p>配置本地仓库文件</p><ol><li>df：查看当前光盘挂载情况</li><li>mount：挂载<br>语法：mount  &#x2F;dev&#x2F;cdrom  &#x2F;media<br>#将光盘挂载到&#x2F;media目录下</li><li>仓库文件*.repo<br>[仓库ID]<br>name&#x3D;名字<br>baseurl&#x3D;file:&#x2F;&#x2F;&#x2F;media<br>#centos8中有两个路径<br>enabled&#x3D;1<br>gpgkey&#x3D;安全密钥<br>gpgcheck&#x3D;1</li></ol></li><li><p>yum的使用<br>语法：yum   选项  参数 <br><a href="https://blog.csdn.net/jeikerxiao/article/details/54571064">CentOS 7 - yum常见命令_yum provider-CSDN博客</a></p><table><thead><tr><th>选项</th><th>说明</th><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-h</td><td>显示帮助信息</td><td>install</td><td>安装rpm软件包</td></tr><tr><td>-y</td><td>对所有的提问都回答“yes”</td><td>update</td><td>更新rpm软件包</td></tr><tr><td>-c</td><td>指定配置文件</td><td>check-update</td><td>检查是否有可用的更新rpm软件包</td></tr><tr><td>-q</td><td>安静模式</td><td>remove</td><td>删除指定的rpm软件包</td></tr><tr><td>-v</td><td>详细模式</td><td>list</td><td>显示软件包的信息</td></tr><tr><td>-d</td><td>设置调试等级(0-10)</td><td>search</td><td>检查软件包的信息</td></tr><tr><td>-e</td><td>设置错误等级(0-10)</td><td>info</td><td>显示指定的rpm软件包的描述信息和概要信息</td></tr><tr><td>-R</td><td>设置yum处理一个命令的最大等待时间</td><td>clean</td><td>清理yum过期的缓存</td></tr><tr><td>-C</td><td>完全从缓存中运行，而不去下载或者更新任何头文件</td><td>shell</td><td>进入yum的shell提示符</td></tr><tr><td></td><td></td><td>resolvedep</td><td>显示rpm软件包的依赖关系</td></tr><tr><td></td><td></td><td>localinstall</td><td>安装本地的rpm软件包</td></tr><tr><td></td><td></td><td>localupdate</td><td>显示本地rpm软件包进行更新</td></tr><tr><td></td><td></td><td>deplist</td><td>显示rpm软件包的所有依赖关系</td></tr></tbody></table><ol><li>yum  list  包名<br>#查看仓库有无指定安装包</li><li>yum  remove  包名<br>#卸载指定包（一般不用）（centos7只卸载包，centos8会把依赖包一并卸载）</li><li>yum  history<br>#查看安装记录</li><li>yum  history  info  n<br>#查看第n条安装历史</li><li>yum  history  undo  n<br>#撤销第n步操作</li><li>yum  history  redo  n<br>#重做第n步操作</li></ol></li></ol></li><li><p>tar：文件目录的打包与压缩<br>语法：tar  参数  路径&#x2F;*.tar  *(被打包对象)</p><ol><li><p>打包<br>语法：tar  -cf  路径&#x2F;*.tar  *(被打包对象)</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-c</td><td>打包</td></tr><tr><td>-f</td><td>通用参数</td></tr><tr><td>-v</td><td>显示信息</td></tr></tbody></table></li><li><p>解包(解压缩)<br>语法：tar  -xf  路径&#x2F;*.tar</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-x</td><td>解包</td></tr><tr><td>-C</td><td>解包到指定路径：tar  -xf  路径&#x2F;*.tar   -C  指定路径</td></tr></tbody></table></li><li><p>打包并压缩<br>语法：tar  -zcf  路径&#x2F;*.tar.gz   被打包文件</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-z</td><td>调用gzip命令</td></tr><tr><td>-j</td><td>调用bzip2命令</td></tr><tr><td>-J</td><td>调用xz命令</td></tr><tr><td>-a</td><td>自动根据压缩文件后缀选择压缩方式</td></tr></tbody></table></li></ol></li></ol><h1 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h1><ol><li>ctrl + c：强制停止</li><li>Ctrl+d：退出登出</li><li>Ctrl+r：搜索历史命令</li><li>Ctrl+a&#x2F;e：光标移动到命令开始或结束</li><li>Clear或ctrl+l：清屏</li><li>History：查看历史命令</li></ol><h1 id="Vim文本编辑器"><a href="#Vim文本编辑器" class="headerlink" title="Vim文本编辑器"></a>Vim文本编辑器</h1><ol><li><p>vim 文件：打开文件</p></li><li><p>vim 数字 文件：打开文件并将光标移到n行</p></li><li><p>vim &#x2F;关键词 文件：打开文件并高亮关键词</p></li><li><p>shift + 6或者^：光标移到行首</p></li><li><p>shift +4或者$：光标移到行尾</p></li><li><p>gg：光标移到首行。Pgup：向上翻屏</p></li><li><p>G：光标移到末行。Pgdn：向下翻屏</p></li><li><p>复制光标所在行：按键：yy 粘贴：p</p></li><li><p>光标所在行及向下复制行数：按键：数字yy</p></li><li><p>剪切或删除光标所在行：按键：dd（删除后下一行上移）</p></li><li><p>剪切或删除光标所在行及向下指定行数：按键：数字dd（删除后下一行上移）</p></li><li><p>删除后当前行变成空白行：按键：D</p></li><li><p>撤销或恢复：按键：D 恢复：ctrl+r</p></li><li><p>将光标移到指定行：按键：数字+G</p></li><li><p>以当前光标为准，向上或向下移动n行。按键：数字+pgup或pgdn</p></li><li><p>末行模式下快速移动：数字</p></li><li><p>末行模式下：<br>保存 :w 。另存为 :w 路径 。退出 :q 。 保存并退出 :wq或x 。  强制 ！ 。查找 :&#x2F;关键词 （上一个&#x2F;下一个 N&#x2F;n）</p></li><li><p>显示行号（临时）</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>关于429的那些事</title>
    <link href="/2024/12/25/%E5%85%B3%E4%BA%8E429%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    <url>/2024/12/25/%E5%85%B3%E4%BA%8E429%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</url>
    
    <content type="html"><![CDATA[<p>额……</p><p>暂时未完工！</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>使用Hexo搭建自己的博客</title>
    <link href="/2024/12/24/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/12/24/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="使用Hexo搭建自己的博客"><a href="#使用Hexo搭建自己的博客" class="headerlink" title="使用Hexo搭建自己的博客"></a>使用Hexo搭建自己的博客</h2><p>对于一个程序员来说，搭建一个属于自己的博客平台是非常有意义的事情。首先，博客可以记录自己的成长历程，也是对自己一段时间学习和工作的总结和沉淀；其他，通过博客可以营销自己，增强自己在互联网或行业内的影响力，为将来更好的职业生涯打一个坚实的基础。前几年有一本名为《软技能 - 代码之外的生存指南》的畅销书，我记得书中有这么一段话：“流行乐队的音乐才华可能并不比夜店驻场乐队高多少，他们为什么就可以在全世界巡回演出，创造一个又一个白金记录？……你的营销做得越好，你的才华才能表现得淋漓尽致。”</p><p>这里顺便啰嗦两句，在互联网如此发达的今天，我们应该如何营销自己呢？自我营销首先要从打造个人品牌做起，对于程序员来说，最容易去做好的一件事情还是搭建自己的博客。博客相当于是你在互联网上的一个基地，尤其是当你拥有了属于自己的独立博客后，你可以做很多自己想做的事情，既可以传达自己的思想，又可以提升自己的影响力，当然如果你的博客经营得非常好，你可以从中获利。当然，除了博客，直播、视频网站、投稿、写书、技术活动都是可选的自我营销方式。当然，做自我营销也需要持之以恒，三天打鱼两天晒网是很难有什么收获的。</p><h3 id="Hexo概述"><a href="#Hexo概述" class="headerlink" title="Hexo概述"></a>Hexo概述</h3><p>Hexo是一个快速、简洁且高效的博客框架，它能够将<a href="https://zh.wikipedia.org/zh-hans/Markdown">Markdown格式</a>的文档渲染成漂亮的网页，这样我们就可以在很短的时间内迅速的创建出网站的静态内容，而Markdown格式对程序员来说相信并不陌生。要想使用Hexo来搭建自己的博客，我实在想不出有什么教程比<a href="https://hexo.io/zh-cn/">官方文档</a>更好，强烈建议大家阅读官方文档来了解Hexo，下面我只做一个简要的使用说明。</p><blockquote><p>说明：<strong>Markdown</strong>是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，同时也对图片、图表、数学公式提供了支持，可以用来书写电子书、软件文档等，同时也可以非常方便的转换为HTML页面或者是PDF文档。</p></blockquote><p>要使用Hexo，首先得确保计算机上已经安装了<a href="https://nodejs.org/en/">node.js</a>环境和<a href="https://git-scm.com/">git</a>环境，前者是一个能够在服务器端运行JavaScript代码的环境，后者是版本控制工具。安装node.js主要是为了使用它的包管理工具npm，所以不需要先系统的学习node.js的知识；而安装git是为了利用版本控制系统克隆代码已经将博客项目托管到三方平台，如果想学习git，最好的资料是官方网站上的<a href="https://git-scm.com/book/zh/v2"><em>Git Pro</em></a>和<a href="http://www.worldhello.net/gotgit/index.html">《Git权威指南》</a>。安装完成后，我们可以通过下面的命令来确认node.js环境以及它的包管理工具是否安装成功。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Shell">node --version<br>npm --version<br></code></pre></td></tr></table></figure><p>可以通过下面的命令来检查是否安装了git环境。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">git --version<br></code></pre></td></tr></table></figure><p>我们可以使用npm来安装Hexo，npm是node.js的包管理工具，跟Python的pip工具作用一样，可以用它来安装依赖库和三方工具。在第一次使用npm的时候，我们可以先将npm的下载源更换为国内的淘宝镜像，这样下载的速度会有非常显著的提升。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">npm config set registry https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><p>接下来我们就通过npm来安装Hexo，命令如下所示。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>安装成功后，就可以使用Hexo来创建属于自己的博客啦。</p><h3 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h3><blockquote><p>说明：以下内容基本上来自于Hexo的官方文档，推荐大家阅读官方文档。</p></blockquote><p>我们先通过下面的命令来创建一个专门保存博客项目的文件夹，该命令会从github上克隆博客项目和默认的主题。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo init blog<br></code></pre></td></tr></table></figure><p>接下来我们进入这个文件夹并查看目录结构。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Shell">cd blog<br>ls -lR<br></code></pre></td></tr></table></figure><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tap">total 232<br>-rw-r--r--   <span class="hljs-number"> 1 </span>Hao  staff   <span class="hljs-number"> 1768 </span><span class="hljs-number"> 8 </span><span class="hljs-number"> 8 </span>01:15 _config.yml<br>drwxr-xr-x <span class="hljs-number"> 274 </span>Hao  staff   <span class="hljs-number"> 8768 </span><span class="hljs-number"> 8 </span><span class="hljs-number"> 8 </span>01:19 node_modules<br>-rw-r--r--   <span class="hljs-number"> 1 </span>Hao  staff <span class="hljs-number"> 109972 </span><span class="hljs-number"> 8 </span><span class="hljs-number"> 8 </span>01:19 package-lock.json<br>-rw-r--r--   <span class="hljs-number"> 1 </span>Hao  staff    <span class="hljs-number"> 443 </span><span class="hljs-number"> 8 </span><span class="hljs-number"> 8 </span>01:15 package.json<br>drwxr-xr-x   <span class="hljs-number"> 5 </span>Hao  staff    <span class="hljs-number"> 160 </span><span class="hljs-number"> 8 </span><span class="hljs-number"> 8 </span>01:15 scaffolds<br>drwxr-xr-x   <span class="hljs-number"> 3 </span>Hao  staff     <span class="hljs-number"> 96 </span><span class="hljs-number"> 8 </span><span class="hljs-number"> 8 </span>01:15 source<br>drwxr-xr-x   <span class="hljs-number"> 3 </span>Hao  staff     <span class="hljs-number"> 96 </span><span class="hljs-number"> 8 </span><span class="hljs-number"> 8 </span>01:15 themes<br></code></pre></td></tr></table></figure><blockquote><p>说明：Windows环境命令行提示符中可以使用dir命令查看目录结构。需要说明的是：<code>_config.yml</code>是博客项目的配置文件；<code>package.json</code>是项目的依赖项文件；<code>scaffolds</code>保存了Markdown文件的模板，也就是向新添加的Markdown文件中默认填充的内容；<code>source</code>目录下有一个名为<code>_post</code>的目录，我们稍后可以将编写好的Markdown文件放到该目录，这样就可以利用Hexo将Markdown文件处理成博客的静态页面，生成的静态页面将置于<code>public</code>目录下；<code>themes</code>文件夹保存了博客使用的主题。</p></blockquote><p>然后我们通过下面的命令来安装项目所需的依赖项（<code>package.json</code>文件指明了这些依赖项）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">npm install<br></code></pre></td></tr></table></figure><p>做完上述的操作以后，我们已经可以直接通过下面的命令来生成博客。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo generate<br></code></pre></td></tr></table></figure><p>该命令也可以缩写为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo g<br></code></pre></td></tr></table></figure><p>之前我们在安装依赖项的时候包括了一个名为<code>hexo-server</code>的依赖项，该依赖项可以帮助我们启动一个基于node.js的服务器来运行我们的博客项目，使用下面的命令即可启动服务器。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo server<br></code></pre></td></tr></table></figure><p>该命令也可以缩写为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo s<br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">INFO</span>  <span class="hljs-keyword">Start</span> processing<br><span class="hljs-keyword">INFO</span>  Hexo <span class="hljs-keyword">is</span> running at http://localhost:<span class="hljs-number">4000</span> . Press Ctrl+C <span class="hljs-keyword">to</span> stop.<br></code></pre></td></tr></table></figure><p>从运行命令的提示信息可以看到，服务器已经运转起并使用了4000端口，可以通过<code>Ctrl+C</code>来终止服务器的运行。如果要修改服务器使用的端口，可以在启动服务器的时候加上<code>-p</code>参数；如果希望服务器启动后，自动打开默认的浏览器访问服务器，可以使用<code>-o</code>参数，如下所示。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo s -p 8000 -o<br></code></pre></td></tr></table></figure><p>至此，我们已经可以看到Hexo在没有配置也没有加入自己的Markdown文件下生成的首页，如下图所示。</p><p><img src="/./res/hexo-default-index.png"></p><p>接下来我们修改博客的配置文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">vim _config.yml<br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-comment"># Hexo Configuration</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="hljs-comment">## Source: https://github.com/hexojs/hexo/</span><br><br><span class="hljs-comment"># Site</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">骆昊的技术专栏</span><br><span class="hljs-attr">subtitle:</span> <span class="hljs-string">传道、授业、解惑，分享知识带来的快乐</span><br><span class="hljs-attr">description:</span><br><span class="hljs-attr">keywords:</span><br><span class="hljs-attr">author:</span> <span class="hljs-string">骆昊</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh</span><br><span class="hljs-attr">timezone:</span><br><br><span class="hljs-comment"># URL</span><br><span class="hljs-comment">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span><br><span class="hljs-attr">url:</span> <span class="hljs-string">http://jackfrued.top</span><br><span class="hljs-attr">root:</span> <span class="hljs-string">/</span><br><span class="hljs-attr">permalink:</span> <span class="hljs-string">:year/:month/:day/:title/</span><br><span class="hljs-attr">permalink_defaults:</span><br><br><span class="hljs-comment"># Directory</span><br><span class="hljs-attr">source_dir:</span> <span class="hljs-string">source</span><br><span class="hljs-attr">public_dir:</span> <span class="hljs-string">public</span><br><span class="hljs-attr">tag_dir:</span> <span class="hljs-string">tags</span><br><span class="hljs-attr">archive_dir:</span> <span class="hljs-string">archives</span><br><span class="hljs-attr">category_dir:</span> <span class="hljs-string">categories</span><br><span class="hljs-attr">code_dir:</span> <span class="hljs-string">downloads/code</span><br><span class="hljs-attr">i18n_dir:</span> <span class="hljs-string">:lang</span><br><span class="hljs-attr">skip_render:</span><br><br><span class="hljs-comment"># Writing</span><br><span class="hljs-attr">new_post_name:</span> <span class="hljs-string">:title.md</span> <span class="hljs-comment"># File name of new posts</span><br><span class="hljs-attr">default_layout:</span> <span class="hljs-string">post</span><br><span class="hljs-attr">titlecase:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># Transform title into titlecase</span><br><span class="hljs-attr">external_link:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># Open external links in new tab</span><br><span class="hljs-attr">filename_case:</span> <span class="hljs-number">0</span><br><span class="hljs-attr">render_drafts:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">relative_link:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">future:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">highlight:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">line_number:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">auto_detect:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">tab_replace:</span><br>  <br><span class="hljs-comment"># Home page setting</span><br><span class="hljs-comment"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span><br><span class="hljs-comment"># per_page: Posts displayed per page. (0 = disable pagination)</span><br><span class="hljs-comment"># order_by: Posts order. (Order by date descending by default)</span><br><span class="hljs-attr">index_generator:</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">&#x27;&#x27;</span><br>  <span class="hljs-attr">per_page:</span> <span class="hljs-number">10</span><br>  <span class="hljs-attr">order_by:</span> <span class="hljs-string">-date</span><br>  <br><span class="hljs-comment"># Category &amp; Tag</span><br><span class="hljs-attr">default_category:</span> <span class="hljs-string">uncategorized</span><br><span class="hljs-attr">category_map:</span><br><span class="hljs-attr">tag_map:</span><br><br><span class="hljs-comment"># Date / Time format</span><br><span class="hljs-comment">## Hexo uses Moment.js to parse and display date</span><br><span class="hljs-comment">## You can customize the date format as defined in</span><br><span class="hljs-comment">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="hljs-attr">date_format:</span> <span class="hljs-string">YYYY-MM-DD</span><br><span class="hljs-attr">time_format:</span> <span class="hljs-string">HH:mm:ss</span><br><br><span class="hljs-comment"># Pagination</span><br><span class="hljs-comment">## Set per_page to 0 to disable pagination</span><br><span class="hljs-attr">per_page:</span> <span class="hljs-number">10</span><br><span class="hljs-attr">pagination_dir:</span> <span class="hljs-string">page</span><br><br><span class="hljs-comment"># Extensions</span><br><span class="hljs-comment">## Plugins: https://hexo.io/plugins/</span><br><span class="hljs-comment">## Themes: https://hexo.io/themes/</span><br><span class="hljs-attr">theme:</span> <span class="hljs-string">landscape</span><br><br><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span><br></code></pre></td></tr></table></figure><p>下面是YAML文件中相关选项的说明。</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>title</code></td><td>网站的标题</td></tr><tr><td><code>subtitle</code></td><td>网站的副标题</td></tr><tr><td><code>description</code></td><td>网站的描述</td></tr><tr><td><code>keywords</code></td><td>网站的关键词，可以用逗号分隔多个关键词</td></tr><tr><td><code>author</code></td><td>自己的名字</td></tr><tr><td><code>language</code></td><td>网站使用的语言</td></tr><tr><td><code>timezone</code></td><td>网站使用时区，默认使用电脑上设置的时区</td></tr><tr><td><code>url</code></td><td>网址</td></tr><tr><td><code>root</code></td><td>网站根目录</td></tr><tr><td><code>source_dir</code></td><td>资源文件夹，这个文件夹用来存放内容，默认source目录</td></tr><tr><td><code>public_dir</code></td><td>公共文件夹，这个文件夹用于存放生成的站点文件，默认public目录</td></tr><tr><td><code>tag_dir</code></td><td>标签文件夹，默认tags目录</td></tr><tr><td><code>archive_dir</code></td><td>归档文件夹，默认archives目录</td></tr><tr><td><code>category_dir</code></td><td>分类文件夹，默认categories目录</td></tr><tr><td><code>auto_spacing</code></td><td>在中文和英文之间加入空格，默认false</td></tr><tr><td><code>titlecase</code></td><td>把标题转换为首字母大写，默认false</td></tr><tr><td><code>external_link</code></td><td>在新标签中打开链接，默认true</td></tr><tr><td><code>relative_link</code></td><td>把链接改为与根目录的相对位址，默认false</td></tr><tr><td><code>default_category</code></td><td>默认分类</td></tr><tr><td><code>date_format</code></td><td>日期格式，默认YYYY-MM-DD</td></tr><tr><td><code>time_format</code></td><td>时间格式，默认HH:mm:ss</td></tr><tr><td><code>per_page</code></td><td>每页显示的文章数量 ，默认值10，0表示不使用分页</td></tr><tr><td><code>pagination_dir</code></td><td>分页目录，默认为page目录</td></tr><tr><td><code>theme</code></td><td>当前主题名称</td></tr><tr><td><code>deploy</code></td><td>部署部分的设置</td></tr></tbody></table><p>我们将编写好的Markdown文件可以拷贝到<code>source/_posts</code>目录，我们可以在每个Markdown文件的上方添加Front-matter来对文件的布局、标题、分类、标签、发布日期等信息加以说明。所谓Front-matter，就是每个Markdown文件最上方以<code>---</code>分隔的区域，可以在Front-matter中设置以下内容。</p><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>layout</code></td><td>布局</td><td></td></tr><tr><td><code>title</code></td><td>标题</td><td></td></tr><tr><td><code>date</code></td><td>建立日期</td><td>文件建立日期</td></tr><tr><td><code>updated</code></td><td>更新日期</td><td>文件更新日期</td></tr><tr><td><code>comments</code></td><td>开启文章的评论功能</td><td>true</td></tr><tr><td><code>tags</code></td><td>标签（不适用于分页）</td><td></td></tr><tr><td><code>categories</code></td><td>分类（不适用于分页）</td><td></td></tr><tr><td><code>permalink</code></td><td>覆盖文章网址</td><td></td></tr></tbody></table><p>例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">---<br>title: Python编程惯例<br>category: Python基础<br><span class="hljs-section">date: 2019-8-1</span><br><span class="hljs-section">---</span><br><span class="hljs-section">## Python惯例</span><br><br>“惯例”这个词指的是“习惯的做法，常规的办法，一贯的做法”，与这个词对应的英文单词叫“idiom”。由于Python跟其他很多编程语言在语法和使用上还是有比较显著的差别，因此作为一个Python开发者如果不能掌握这些惯例，就无法写出“Pythonic”的代码。下面我们总结了一些在Python开发中的惯用的代码。<br><br><span class="hljs-bullet">1.</span> 让代码既可以被导入又可以被执行。<br>   if <span class="hljs-strong">__name__</span> == &#x27;<span class="hljs-strong">__main__</span>&#x27;:<br><br><span class="hljs-bullet">2.</span> 用下面的方式判断逻辑“真”或“假”。<br>   if x:<br>   if not x:<br></code></pre></td></tr></table></figure><p>在完成上述工作后，我们可以通过下面的命令先清理之前生成的内容。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo clean<br></code></pre></td></tr></table></figure><p>接下来我们就可以用之前讲过的命令重新生成并运行博客项目。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo generate<br>hexo server -p 8000 -o<br></code></pre></td></tr></table></figure><h3 id="将博客托管到GitHub"><a href="#将博客托管到GitHub" class="headerlink" title="将博客托管到GitHub"></a>将博客托管到GitHub</h3><p>我们可以利用GitHub网站提供的<a href="https://pages.github.com/">Pages服务</a>来托管我们的博客。在GitHub Pages的首页上就有一个教程指导我们如何托管自己的网站，当然第一步得在GitHub上注册一个属于自己的账号，登录成功之后才能进行后续的操作。</p><ol><li><p>根据自己的用户名创建一个仓库，仓库<strong>一定</strong>要取名为“用户名.github.io”。例如：我在GitHub上的用户名是jackfrued，那么我的托管博客项目的仓库一定要命名为jackfrued.github.io。</p><p><img src="/./res/create-new-repo.png"></p></li><li><p>修改博客项目的配置文件<code>_config.yml</code>，配置使用GitHub来部署该博客项目。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">vim _config.yml<br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-comment"># 省略上面的内容</span><br><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/jackfrued/jackfrued.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><p>上面的配置中，type指定了使用git进行项目部署，repo指定了部署项目的git仓库的URL，我们这里使用的是HTTPS的地址，如果之前配置过密钥对也可以使用SSH的地址，branch指定了将代码同步到仓库中的哪一个分支，通常master分支就是发布项目最终工作成果的分支，也称为项目的主分支。</p></li><li><p>安装名为<code>hexo-deployer-git</code>的部署器插件，通过该插件就能实现一键部署。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure></li><li><p>可以使用下面的命令来实现一键部署到GitHub。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo deploy -g<br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">hexo generate -d<br></code></pre></td></tr></table></figure></li><li><p>接下来在浏览器中输入<a href="https://jackfrued.github.io/">jackfrued.github.io</a>就能够看到自己的博客，现在全世界的人都可以通过这个URL来访问你的博客。大家是否注意到，访问你博客的这个URL就是刚才我们给仓库起的名字，因为你在GitHub上注册的用户名是独一无二的，所以这个域名也是全世界独一无二的。</p></li></ol><h3 id="将博客绑定到自己的域名"><a href="#将博客绑定到自己的域名" class="headerlink" title="将博客绑定到自己的域名"></a>将博客绑定到自己的域名</h3><p>虽然我们已经通过GitHub提供的域名访问到了自己的博客，但是如果我们不愿意“寄人篱下”，我们在利用GitHub Pages提供的托管服务同时，也可以将博客绑定到自己专属的域名。如果暂时还没有购买域名，我们可以在提供域名购买服务的网站（如：<a href="https://www.hichina.com/">万网</a>、<a href="https://www.godaddy.com/">GoDaddy</a>）上进行购买。</p><p><img src="/./res/wanwang.png"></p><blockquote><p>说明：目前国内对域名的管理日趋严格，在购买域名时需要填写一大堆的个人信息，进行实名认证后才能获得域名，这一点相信大家能够理解。</p></blockquote><p>比如说，我现在已经购买了一个名为“jackfrued.top”的域名，如何让它跟“jackfrued.github.io”这个域名做一个绑定呢，我们可以利用<a href="https://dns.console.aliyun.com/">阿里云控制台</a>或者<a href="https://www.dnspod.cn/">DNSPod</a>来做一个域名解析服务。在域名解析平台登录成功后，可以添加或选择自己的域名来配置域名解析。点击“添加记录”按钮，创建一个类型为CNAME的域名解析，CNAME类型的解析代表将一个域名解析到另一个域名，如下图所示。</p><p><img src="/./res/dns-configuration.png"></p><p>完成这一步后，还不能马上通过自己的域名访问到博客项目，最后需要在博客项目的<code>source</code>目录下添加一个名为CNAME的文件（请注意这个文件的名字是全大写字母的）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">vim CNAME<br></code></pre></td></tr></table></figure><p>编辑该文件的内容，如下所示。</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">jackfrued.<span class="hljs-built_in">top</span><br></code></pre></td></tr></table></figure><p>可以清理一下之前生成的内容，然后将项目重新生成并发布到GitHub就大功告成了！现在我们已经拥有了独立域名的博客，希望大家可以利用它做些有意义的事情（记录自己的成长历程、分享自己的工作经验、提升个人的影响力）。加油吧，程序员！</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
